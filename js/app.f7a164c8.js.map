{"version":3,"file":"js/app.f7a164c8.js","mappings":"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","sources":["webpack://jeopardy-game/./src/App.vue","webpack://jeopardy-game/./src/components/GameBoard.vue","webpack://jeopardy-game/./src/components/GameBoard.vue?b7d7","webpack://jeopardy-game/./src/App.vue?7ccd","webpack://jeopardy-game/./src/plugins/vuetify.js","webpack://jeopardy-game/./src/main.js","webpack://jeopardy-game/webpack/bootstrap","webpack://jeopardy-game/webpack/runtime/chunk loaded","webpack://jeopardy-game/webpack/runtime/compat get default export","webpack://jeopardy-game/webpack/runtime/define property getters","webpack://jeopardy-game/webpack/runtime/global","webpack://jeopardy-game/webpack/runtime/hasOwnProperty shorthand","webpack://jeopardy-game/webpack/runtime/make namespace object","webpack://jeopardy-game/webpack/runtime/jsonp chunk loading","webpack://jeopardy-game/webpack/startup"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <v-container>\n        <v-row class=\"align-start\">\n          <!-- Category Selection Dropdown -->\n          <v-col cols=\"12\" md=\"6\" >\n            <v-select\n              v-model=\"selectedCategories\"\n              :items=\"categories\"\n              label=\"Select Categories\"\n              multiple\n              :disabled=\"gameStarted\"\n              style=\"background-color: orange; height: 55px\" \n            ></v-select>\n            <!-- Instruction Text Below the Dropdown -->\n            <p style=\"color: blue;\">(Please select one to five categories and then click \"Start Game.\")</p>\n          </v-col>\n\n          <!-- Start and Reset Game Buttons -->\n          <v-col cols=\"auto\">\n            <v-btn class=\"start-game-btn\" @click=\"handleStartGame\" style=\"width: 100px; height: 50px;\" color=\"green\">\n              START\n            </v-btn>\n            <v-btn @click=\"resetGame\" :disabled=\"!gameStarted\" style=\"width: 100px; height: 50px; margin-left: 10px;\" color=\"grey\">\n              RESET\n            </v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- Error message if there is any -->\n        <p v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\n\n        <!-- Centered GameBoard with Left Shift -->\n        <v-row class=\"d-flex justify-start mt-4\">\n          <v-col cols=\"12\" md=\"8\" class=\"text-center\" style=\"margin-left: 0px;\">\n            <GameBoard\n              v-if=\"gameStarted\"\n              :categories=\"selectedCategories\"\n              :openedQuestions=\"openedQuestions\"\n              :displayedQuestions=\"displayedQuestions\"\n              @ask-question=\"handleQuestion\"\n            ></GameBoard>\n          </v-col>\n        </v-row>\n\n        <!-- Player Scores Section -->\n        <v-row class=\"d-flex justify-start mt-4\">\n          <!-- Score Table - Display only when the game starts -->\n          <v-col cols=\"12\" md=\"8\" class=\"text-center\" style=\"margin-left: 0px;\">\n            <div v-if=\"gameStarted\" class=\"player-scores\">\n              <h3>Player Scores</h3>\n              <table class=\"score-table\">\n                <tr>\n                  <th :class=\"currentPlayer === 0 ? 'active-player' : 'inactive-player'\">Player 1</th>\n                  <th :class=\"currentPlayer === 1 ? 'active-player' : 'inactive-player'\">Player 2</th>\n                </tr>\n                <tr>\n                  <td>{{ scores[0] }}</td>\n                  <td>{{ scores[1] }}</td>\n                </tr>\n              </table>\n            </div>\n          </v-col>\n        </v-row>\n\n        <!-- Question Modal -->\n        <v-dialog v-model=\"showModal\" persistent max-width=\"600px\" style=\"top: -200px;margin-left: -300px;\">\n          <v-card>\n            <v-card-title>{{ currentQuestion.question }}</v-card-title>\n            <v-card-text>\n              <p>Points: {{ currentQuestion.points }}</p>\n              <p v-if=\"showAnswer\">Answer: {{ currentQuestion.answer }}</p>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn color=\"blue darken-1\" text @click=\"revealAnswer\">Show Answer</v-btn>\n              <v-btn color=\"green darken-1\" text v-if=\"showAnswer\" @click=\"submitAnswer(true)\">Correct</v-btn>\n              <v-btn color=\"red darken-1\" text v-if=\"showAnswer\" @click=\"submitAnswer(false)\">Incorrect</v-btn>\n              <v-btn color=\"orange darken-1\" text @click=\"skipQuestion\">Skip</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n\n        <!-- Winner Announcement Modal -->\n        <v-dialog v-model=\"showWinnerModal\" persistent max-width=\"600px\" class=\"winner-modal\">\n          <v-card>\n            <v-card-title>Game Over</v-card-title>\n            <v-card-text>\n              <p>{{ winnerMessage }}</p>\n            </v-card-text>\n\n            <v-card-actions>\n              <v-btn color=\"green darken-1\" text @click=\"resetGame\">Play Again</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport Papa from 'papaparse';\nimport GameBoard from './components/GameBoard.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    GameBoard,\n  },\n  data() {\n    return {\n      categories: [],\n      selectedCategories: [],\n      questions: {},\n      showModal: false,\n      showWinnerModal: false,  // Winner Modal visibility\n      currentQuestion: {},  // Hold the current question data\n      scores: [0, 0],\n      currentPlayer: 0,\n      showAnswer: false,\n      openedQuestions: [],\n      gameStarted: false,\n      totalSelectedQuestions: 0,  \n      displayedQuestions: {},  // Hold random questions\n      questionsAnswered: 0,  // Track the number of questions answered\n      totalQuestions: 25,  // Total questions in the game\n      winnerMessage: '',  // Message to display the winner\n      errorMessage: ''  // Error message for validation\n    };\n  },\n  methods: {\n    loadQuestions() {\n      const csvFile = process.env.NODE_ENV === 'production' ? '/jeopardy-game/questions.csv' : '/questions.csv';\n      Papa.parse(csvFile, {\n        header: true,\n        download: true,\n        complete: (result) => {\n          this.processQuestions(result.data);\n        }\n      });\n    },\n    processQuestions(data) {\n      const categories = new Set();\n      const questions = {};\n\n      data.forEach((row) => {\n        const { Category, Question, Answer, Marks } = row;\n\n        if (Category && Question && Answer && Marks) {\n          categories.add(Category);\n\n          if (!questions[Category]) {\n            questions[Category] = [];\n          }\n\n          questions[Category].push({\n            question: Question,\n            answer: Answer,\n            points: parseInt(Marks, 10),\n          });\n        }\n      });\n\n      this.categories = Array.from(categories);\n      this.questions = questions;\n    },\n    shuffle(array) {\n      let currentIndex = array.length, randomIndex;\n      while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n      }\n      return array;\n    },\n    handleStartGame() {\n      // Check if no categories are selected or more than 5 categories are selected\n      if (this.selectedCategories.length === 0) {\n        this.errorMessage = \"Please select at least one category.\";\n        return;\n      }\n      if (this.selectedCategories.length > 5) {\n        this.errorMessage = \"Please select only a maximum of 5 categories.\";\n        return;\n      }\n\n      // Clear error message and proceed\n      this.errorMessage = \"\";\n      this.gameStarted = true;\n\n      // Determine the max questions per category based on the number of selected categories\n      let maxQuestionsPerCategory = 25;  // Default for one category\n      const numSelectedCategories = this.selectedCategories.length;\n\n      if (numSelectedCategories === 2) {\n        maxQuestionsPerCategory = 20;\n      } else if (numSelectedCategories === 3) {\n        maxQuestionsPerCategory = 10;\n      } else if (numSelectedCategories >= 4) {\n        maxQuestionsPerCategory = 5;\n      }\n\n      // Sort selectedCategories based on available question count (ascending)\n      const sortedCategories = [...this.selectedCategories].sort((a, b) => {\n        const availableQuestionsA = this.questions[a] ? this.questions[a].length : 0;\n        const availableQuestionsB = this.questions[b] ? this.questions[b].length : 0;\n        return availableQuestionsA - availableQuestionsB;\n      });\n\n      const selectedQuestions = {};\n      let totalSelectedQuestions = 0;\n      let remainingQuestions = this.totalQuestions; // Max of 25 questions\n      let remainingSelectedCategories = sortedCategories.length\n      let questionsPerCategory = Math.floor(remainingQuestions / remainingSelectedCategories); // Evenly distribute\n\n      sortedCategories.forEach((category) => {\n        const shuffledQuestions = this.shuffle([...this.questions[category]]); // Shuffle questions\n        selectedQuestions[category] = shuffledQuestions.slice(0, Math.min(questionsPerCategory, maxQuestionsPerCategory));\n        selectedQuestions[category].sort((a, b) => a.points - b.points);\n        totalSelectedQuestions += selectedQuestions[category].length;\n        remainingQuestions -= selectedQuestions[category].length;\n        remainingSelectedCategories -= 1;\n        questionsPerCategory = Math.floor(remainingQuestions / remainingSelectedCategories);\n      });\n\n      this.totalSelectedQuestions = totalSelectedQuestions;\n      this.displayedQuestions = selectedQuestions;\n      this.questionsAnswered = 0;  // Reset questions answered\n    },\n    handleQuestion({ category, index }) {\n      const selectedQuestion = this.displayedQuestions[category][index];\n      if (selectedQuestion) {\n        this.currentQuestion = selectedQuestion;\n        this.showModal = true;\n        this.showAnswer = false;\n        this.openedQuestions.push({ category, index });\n      }\n    },\n    revealAnswer() {\n      this.showAnswer = true;\n    },\n    submitAnswer(isCorrect) {\n      if (isCorrect) {\n        this.scores[this.currentPlayer] += this.currentQuestion.points;\n      } else {\n        this.scores[this.currentPlayer] -= this.currentQuestion.points;\n      }\n      this.questionsAnswered++;\n      this.closeModal();\n      this.checkGameOver();  // Check after closing modal\n      this.switchPlayer();\n    },\n    skipQuestion() {\n      this.questionsAnswered++;\n      this.closeModal();  // Close the modal without changing score\n      this.checkGameOver();  // Check after closing modal\n      this.switchPlayer();  // Switch to the next player\n    },\n    // Method to handle the Escape key press\n    handleEscapeKey(event) {\n      if (event.key === \"Escape\" && this.showModal) {\n        this.skipQuestion();  // Trigger skip logic when Escape is pressed\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n      this.showAnswer = false;\n    },\n    switchPlayer() {\n      this.currentPlayer = (this.currentPlayer + 1) % this.scores.length;\n    },\n    checkGameOver() {\n      if (this.questionsAnswered >= this.totalSelectedQuestions) {\n        this.showWinner();\n      }\n    },\n    showWinner() {\n      if (this.scores[0] > this.scores[1]) {\n        this.winnerMessage = 'Player 1 is the winner!';\n      } else if (this.scores[1] > this.scores[0]) {\n        this.winnerMessage = 'Player 2 is the winner!';\n      } else {\n        this.winnerMessage = 'It\\'s a tie!';\n      }\n      this.showWinnerModal = true;  // Show the winner modal immediately\n    },\n    resetGame() {\n      this.scores = [0, 0];\n      this.openedQuestions = [];\n      this.questionsAnswered = 0;\n      this.gameStarted = false;\n      this.showWinnerModal = false;\n      this.selectedCategories = []; // Clear selected categories\n      this.displayedQuestions = {};  // Clear questions from the board\n      this.errorMessage = \"\";\n    }\n  },\n  mounted() {\n    this.loadQuestions();\n    // Add a keydown listener when the component is mounted\n    window.addEventListener(\"keydown\", this.handleEscapeKey);\n  },\n  beforeUnmount() {\n    // Remove the keydown listener when the component is destroyed\n    window.removeEventListener(\"keydown\", this.handleEscapeKey);\n  }\n};\n</script>\n\n<style scoped>\n.player-scores {\n  margin-top: 20px;\n  text-align: Center;\n}\n\n.score-table {\n  margin: auto; /* Centering the table */\n  border-collapse: collapse;\n}\n\n.score-table th, .score-table td {\n  padding: 10px;\n  border: 1px solid #000;\n  text-align: center;\n}\n\ntable {\n  margin: 0 auto;\n  border-collapse: collapse;\n  width: 300px;\n}\n\nth, td {\n  border: 2px solid black;\n  padding: 10px;\n  font-size: 20px;\n}\n\n.winner-modal {\n  margin-top: -200px;\n  margin-left: -300px;\n}\n\n.winner-message {\n  font-size: 20px;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.start-game-btn {\n  background-color: green !important;\n  color: white !important;\n}\n\n.active-player {\n  background-color: green !important;\n  color: white;\n  padding: 10px;\n}\n\n.inactive-player {\n  background-color: red !important;\n  color: white;\n  padding: 10px;\n}\n</style>","<template>\n  <div class=\"game-board\">\n    <table>\n      <thead>\n        <tr>\n          <!-- Loop over columns to display the correct category header -->\n          <th v-for=\"(column, colIndex) in distributedColumns\" :key=\"colIndex\">\n            {{ column.category }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <!-- Loop through rows to display 5 rows of questions -->\n        <tr v-for=\"rowIndex in 5\" :key=\"rowIndex\">\n          <td v-for=\"(column, colIndex) in distributedColumns\" :key=\"colIndex\">\n            <v-btn\n              :class=\"{ 'answered': isOpened(column.category, getQuestionIndex(column, rowIndex)) }\"\n              style=\"background-color: lightblue; color: purple;\"\n              v-if=\"getQuestionForCell(column, rowIndex)\"\n              @click=\"$emit('ask-question', { category: column.category, index: getQuestionIndex(column, rowIndex) })\"\n            >\n              {{ getQuestionForCell(column, rowIndex).points }} POINTS\n            </v-btn>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    categories: Array, // List of selected categories\n    displayedQuestions: Object, // Questions by category\n    openedQuestions: Array, // List of opened questions\n  },\n  computed: {\n    distributedColumns() {\n      // Create an array to store the distributed columns\n      const columns = [];\n\n      this.categories.forEach((category) => {\n        const categoryQuestions = this.displayedQuestions[category] || [];\n\n        // Loop over category questions in batches of 5 and assign to columns\n        for (let i = 0; i < Math.ceil(categoryQuestions.length / 5); i++) {\n          columns.push({\n            category: category,\n            startIndex: i * 5, // Start index for the batch of questions for this column\n          });\n        }\n      });\n\n      return columns;\n    }\n  },\n  methods: {\n    // Helper function to get the correct question for the current column and row\n    getQuestionForCell(column, rowIndex) {\n      const category = column.category;\n      const questionIndex = column.startIndex + (rowIndex - 1);\n      if (this.displayedQuestions[category] && this.displayedQuestions[category][questionIndex]) {\n        return this.displayedQuestions[category][questionIndex];\n      }\n      return null;\n    },\n\n    // Helper function to get the correct question index for openedQuestions\n    getQuestionIndex(column, rowIndex) {\n      return column.startIndex + (rowIndex - 1);\n    },\n\n    // Check if a question has been opened or answered\n    isOpened(category, index) {\n      return this.openedQuestions.some(q => q.category === category && q.index === index);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.game-board {\n  width: 100%;\n  max-width: 800px;\n  margin: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  text-align: center;\n  padding: 10px;\n}\n\nv-btn {\n  width: 120px;\n  margin: 5px 0;\n}\n\n.greyed-out {\n  background-color: lightgrey !important;\n  pointer-events: none;\n}\n\n/* Add a total questions display */\n.total-questions {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.total-questions p {\n  font-size: 16px;\n  margin: 5px 0;\n}\n\n.answered {\n  background-color: grey !important;\n  color: white !important;\n  pointer-events: none;\n}\n</style>","import { render } from \"./GameBoard.vue?vue&type=template&id=ec234bca&scoped=true\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js\"\n\nimport \"./GameBoard.vue?vue&type=style&index=0&id=ec234bca&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ec234bca\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=d2b6ca40&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=d2b6ca40&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d2b6ca40\"]])\n\nexport default __exports__","// src/plugins/vuetify.js\nimport 'vuetify/styles';  // Vuetify styles\nimport { createVuetify } from 'vuetify';\nimport * as components from 'vuetify/components';\nimport * as directives from 'vuetify/directives';\n\nexport default createVuetify({\n  components,\n  directives,\n});","import { createApp } from 'vue';\nimport App from './App.vue';\nimport vuetify from './plugins/vuetify';  // Import the Vuetify plugin\nimport 'vuetify/styles';\n\ncreateApp(App)\n  .use(vuetify)  // Use Vuetify\n  .mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkjeopardy_game\"] = self[\"webpackChunkjeopardy_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8083); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["key","style","class","_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_main","_component_v_container","_component_v_row","_component_v_col","cols","md","_component_v_select","modelValue","$data","selectedCategories","_cache","$event","items","categories","label","multiple","disabled","gameStarted","_createElementVNode","_","_component_v_btn","onClick","$options","handleStartGame","color","_createTextVNode","resetGame","errorMessage","_createElementBlock","_hoisted_1","_toDisplayString","_createCommentVNode","_component_GameBoard","openedQuestions","displayedQuestions","onAskQuestion","handleQuestion","_hoisted_2","_hoisted_3","_normalizeClass","currentPlayer","scores","_component_v_dialog","showModal","persistent","_component_v_card","_component_v_card_title","currentQuestion","question","_component_v_card_text","points","showAnswer","_hoisted_4","answer","_component_v_card_actions","text","revealAnswer","submitAnswer","skipQuestion","showWinnerModal","winnerMessage","_Fragment","_renderList","distributedColumns","column","colIndex","category","rowIndex","getQuestionForCell","isOpened","getQuestionIndex","_ctx","$emit","index","props","Array","Object","computed","columns","this","forEach","categoryQuestions","i","Math","ceil","length","push","startIndex","methods","questionIndex","some","q","__exports__","name","components","GameBoard","data","questions","totalSelectedQuestions","questionsAnswered","totalQuestions","loadQuestions","csvFile","Papa","header","download","complete","result","processQuestions","Set","row","Category","Question","Answer","Marks","add","parseInt","from","shuffle","array","randomIndex","currentIndex","floor","random","maxQuestionsPerCategory","numSelectedCategories","sortedCategories","sort","a","b","availableQuestionsA","availableQuestionsB","selectedQuestions","remainingQuestions","remainingSelectedCategories","questionsPerCategory","shuffledQuestions","slice","min","selectedQuestion","isCorrect","closeModal","checkGameOver","switchPlayer","handleEscapeKey","event","showWinner","mounted","window","addEventListener","beforeUnmount","removeEventListener","render","createVuetify","directives","createApp","App","use","vuetify","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}
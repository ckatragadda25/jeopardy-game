{"version":3,"file":"js/app.65d244de.js","mappings":"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","sources":["webpack://jeopardy-game/./src/App.vue","webpack://jeopardy-game/./src/components/GameBoard.vue","webpack://jeopardy-game/./src/components/GameBoard.vue?b7d7","webpack://jeopardy-game/./src/App.vue?7ccd","webpack://jeopardy-game/./src/plugins/vuetify.js","webpack://jeopardy-game/./src/main.js","webpack://jeopardy-game/webpack/bootstrap","webpack://jeopardy-game/webpack/runtime/chunk loaded","webpack://jeopardy-game/webpack/runtime/compat get default export","webpack://jeopardy-game/webpack/runtime/define property getters","webpack://jeopardy-game/webpack/runtime/global","webpack://jeopardy-game/webpack/runtime/hasOwnProperty shorthand","webpack://jeopardy-game/webpack/runtime/make namespace object","webpack://jeopardy-game/webpack/runtime/jsonp chunk loading","webpack://jeopardy-game/webpack/startup"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <!-- Centered Title -->\n      <v-row class=\"d-flex justify-center\">\n        <v-col cols=\"12\" class=\"text-center\">\n          <h1 class=\"quiz-title\">Telugu Jeopardy Game</h1>\n        </v-col>\n      </v-row>\n      <v-container>\n        <v-row class=\"align-start\">\n          <!-- Category Selection Dropdown -->\n          <v-col cols=\"12\" md=\"6\" >\n            <v-select\n              v-model=\"selectedCategories\"\n              :items=\"categories\"\n              label=\"Select Categories\"\n              multiple\n              :disabled=\"gameStarted\"\n              style=\"background-color: orange; height: 55px\" \n            ></v-select>\n            <!-- Instruction Text Below the Dropdown -->\n            <p style=\"color: blue; margin-top: 15px;\">(Please select one to five categories and then click \"Start Game.\")</p>\n          </v-col>\n\n          <!-- Start and Reset Game Buttons -->\n          <v-col cols=\"auto\">\n            <v-btn class=\"start-game-btn\" :disabled=\"gameStarted\" @click=\"handleStartGame\" style=\"width: 100px; height: 50px;\" color=\"green\">\n              START\n            </v-btn>\n            <v-btn @click=\"resetGame\" style=\"width: 100px; height: 50px; margin-left: 10px;\" color=\"blue darken-4\">\n              RESET\n            </v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- Error message if there is any -->\n        <p v-if=\"errorMessage\" style=\"color: red;font-size: 30px;\" class=\"blinking-text\">{{ errorMessage }}</p>\n\n        <!-- Centered GameBoard with Left Shift -->\n        <v-row class=\"d-flex justify-start mt-4\">\n          <v-col cols=\"12\" md=\"8\" class=\"text-center\" style=\"margin-left: 0px;\">\n            <GameBoard\n              v-if=\"gameStarted\"\n              :categories=\"selectedCategories\"\n              :openedQuestions=\"openedQuestions\"\n              :displayedQuestions=\"displayedQuestions\"\n              @ask-question=\"handleQuestion\"\n            ></GameBoard>\n          </v-col>\n        </v-row>\n\n        <!-- Player Scores Section -->\n        <v-row class=\"d-flex justify-start mt-4\">\n          <!-- Score Table - Display only when the game starts -->\n          <v-col cols=\"12\" md=\"8\" class=\"text-center\" style=\"margin-left: 0px;\">\n            <div v-if=\"gameStarted\" class=\"player-scores\">\n              <h3>Player Scores</h3>\n              <table class=\"score-table\">\n                <tr>\n                  <th :class=\"currentPlayer === 0 ? 'active-player' : 'inactive-player'\">Player 1</th>\n                  <th :class=\"currentPlayer === 1 ? 'active-player' : 'inactive-player'\">Player 2</th>\n                </tr>\n                <tr>\n                  <td>{{ scores[0] }}</td>\n                  <td>{{ scores[1] }}</td>\n                </tr>\n              </table>\n            </div>\n          </v-col>\n        </v-row>\n\n        <!-- Question Modal -->\n        <v-dialog v-model=\"showModal\" persistent max-width=\"600px\" style=\"top: -50px;\">\n          <v-card>\n            <!-- Ensure the text wraps within the available space -->\n            <v-card-title style=\"white-space: normal; word-wrap: break-word;\">\n              {{ currentQuestion.question }}\n            </v-card-title>\n\n            <v-card-text>\n              <p>Points: {{ currentQuestion.points }}</p>\n\n              <!-- Word-wrap answer if it is shown -->\n              <p v-if=\"showAnswer\" style=\"white-space: normal; word-wrap: break-word;\">\n                Answer: {{ currentQuestion.answer }}\n              </p>\n            </v-card-text>\n\n            <v-card-actions>\n              <v-btn color=\"blue darken-1\" text @click=\"revealAnswer\">Show Answer</v-btn>\n              <v-btn color=\"green darken-1\" text v-if=\"showAnswer\" @click=\"submitAnswer(true)\">Correct</v-btn>\n              <v-btn color=\"red darken-1\" text v-if=\"showAnswer\" @click=\"submitAnswer(false)\">Incorrect</v-btn>\n              <v-btn color=\"orange darken-1\" text @click=\"skipQuestion\">Skip</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n\n        <!-- Winner Announcement Modal -->\n        <v-dialog v-model=\"showWinnerModal\" persistent max-width=\"600px\" class=\"winner-modal\">\n          <v-card>\n            <v-card-title style=\"font-weight: bold; font-size: 24px; text-align: center;\">Game Over</v-card-title>\n            <v-card-text style=\"text-align: center; font-size: 18px;\">\n              <!-- Bold and dark green winnerMessage -->\n              <p style=\"margin-bottom: 10px; font-weight: bold; color: darkgreen;\">{{ winnerMessage }}</p>\n              \n              <!-- Styled Final Scores section -->\n              <p style=\"font-weight: bold; margin-bottom: 5px;\">Final Scores:</p>\n              <ul style=\"list-style: none; padding: 0; font-size: 18px; margin-bottom: 5px;\">\n                <li style=\"margin-bottom: 5px;\">🏆 Player 1: <strong>{{ scores[0] }}</strong></li>\n                <li>🏆 Player 2: <strong>{{ scores[1] }}</strong></li>\n              </ul>\n            </v-card-text>\n\n            <v-card-actions style=\"justify-content: center; margin-top: -30px;\">\n              <!-- Close button with increased size -->\n              <v-btn color=\"blue darken-1\" text @click=\"showWinnerModal = false\" style=\"font-size: 18px; bold; padding: 12px 24px;\">\n                Close\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport Papa from 'papaparse';\nimport GameBoard from './components/GameBoard.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    GameBoard,\n  },\n  data() {\n    return {\n      categories: [],\n      selectedCategories: [],\n      questions: {},\n      showModal: false,\n      showWinnerModal: false,  // Winner Modal visibility\n      currentQuestion: {},  // Hold the current question data\n      scores: [0, 0],\n      currentPlayer: 0,\n      showAnswer: false,\n      openedQuestions: [],\n      gameStarted: false,\n      totalSelectedQuestions: 0,  \n      displayedQuestions: {},  // Hold random questions\n      questionsAnswered: 0,  // Track the number of questions answered\n      totalQuestions: 25,  // Total questions in the game\n      winnerMessage: '',  // Message to display the winner\n      errorMessage: ''  // Error message for validation\n    };\n  },\n  methods: {\n    loadQuestions() {\n      const csvFile = process.env.NODE_ENV === 'production' ? '/jeopardy-game/questions.csv' : '/questions.csv';\n      Papa.parse(csvFile, {\n        header: true,\n        download: true,\n        complete: (result) => {\n          this.processQuestions(result.data);\n        }\n      });\n    },\n    processQuestions(data) {\n      const categories = new Set();\n      const questions = {};\n\n      data.forEach((row) => {\n        const { Category, Question, Answer, Marks } = row;\n\n        if (Category && Question && Answer && Marks) {\n          categories.add(Category);\n\n          if (!questions[Category]) {\n            questions[Category] = [];\n          }\n\n          questions[Category].push({\n            question: Question,\n            answer: Answer,\n            points: parseInt(Marks, 10),\n          });\n        }\n      });\n\n      this.categories = Array.from(categories);\n      this.questions = questions;\n    },\n    shuffle(array) {\n      let currentIndex = array.length, randomIndex;\n      while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n      }\n      return array;\n    },\n    handleStartGame() {\n      // Check if no categories are selected or more than 5 categories are selected\n      if (this.selectedCategories.length === 0) {\n        this.errorMessage = \"Please select at least one category.\";\n        return;\n      }\n      if (this.selectedCategories.length > 5) {\n        this.errorMessage = \"Please select only a maximum of 5 categories.\";\n        return;\n      }\n\n      // Clear error message and proceed\n      this.errorMessage = \"\";\n      this.gameStarted = true;\n\n      // Determine the max questions per category based on the number of selected categories\n      let maxQuestionsPerCategory = 25;  // Default for one category\n      const numSelectedCategories = this.selectedCategories.length;\n\n      if (numSelectedCategories === 2) {\n        maxQuestionsPerCategory = 20;\n      } else if (numSelectedCategories === 3) {\n        maxQuestionsPerCategory = 10;\n      } else if (numSelectedCategories >= 4) {\n        maxQuestionsPerCategory = 5;\n      }\n\n      // Sort selectedCategories based on available question count (ascending)\n      const sortedCategories = [...this.selectedCategories].sort((a, b) => {\n        const availableQuestionsA = this.questions[a] ? this.questions[a].length : 0;\n        const availableQuestionsB = this.questions[b] ? this.questions[b].length : 0;\n        return availableQuestionsA - availableQuestionsB;\n      });\n\n      const selectedQuestions = {};\n      let totalSelectedQuestions = 0;\n      let remainingQuestions = this.totalQuestions; // Max of 25 questions\n      let remainingSelectedCategories = sortedCategories.length;\n      let questionsPerCategory = Math.floor(remainingQuestions / remainingSelectedCategories); // Evenly distribute\n\n      sortedCategories.forEach((category) => {\n        const shuffledQuestions = this.shuffle([...this.questions[category]]); // Shuffle questions\n        \n        // Limit questions to the nearest multiple of 5 and within maxQuestionsPerCategory\n        const numQuestionsInCategory = Math.min(questionsPerCategory, maxQuestionsPerCategory);\n        const adjustedQuestionsCount = Math.floor(numQuestionsInCategory / 5) * 5;  // Multiple of 5\n\n        selectedQuestions[category] = shuffledQuestions.slice(0, adjustedQuestionsCount);\n        selectedQuestions[category].sort((a, b) => a.points - b.points);\n        totalSelectedQuestions += selectedQuestions[category].length;\n        remainingQuestions -= selectedQuestions[category].length;\n        remainingSelectedCategories -= 1;\n        questionsPerCategory = Math.floor(remainingQuestions / remainingSelectedCategories);\n      });\n\n      this.totalSelectedQuestions = totalSelectedQuestions;\n      this.displayedQuestions = selectedQuestions;\n      this.questionsAnswered = 0;  // Reset questions answered\n    },\n    handleQuestion({ category, index }) {\n      const selectedQuestion = this.displayedQuestions[category][index];\n      if (selectedQuestion) {\n        this.currentQuestion = selectedQuestion;\n        this.showModal = true;\n        this.showAnswer = false;\n        this.openedQuestions.push({ category, index });\n      }\n    },\n    revealAnswer() {\n      this.showAnswer = true;\n    },\n    submitAnswer(isCorrect) {\n      if (isCorrect) {\n        this.scores[this.currentPlayer] += this.currentQuestion.points;\n      } else {\n        this.scores[this.currentPlayer] -= this.currentQuestion.points;\n      }\n      this.questionsAnswered++;\n      this.closeModal();\n      this.checkGameOver();  // Check after closing modal\n      this.switchPlayer();\n    },\n    skipQuestion() {\n      this.questionsAnswered++;\n      this.closeModal();  // Close the modal without changing score\n      this.checkGameOver();  // Check after closing modal\n      this.switchPlayer();  // Switch to the next player\n    },\n    // Method to handle the Escape key press\n    handleEscapeKey(event) {\n      if (event.key === \"Escape\" && this.showModal) {\n        this.skipQuestion();  // Trigger skip logic when Escape is pressed\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n      this.showAnswer = false;\n    },\n    switchPlayer() {\n      this.currentPlayer = (this.currentPlayer + 1) % this.scores.length;\n    },\n    checkGameOver() {\n      if (this.questionsAnswered >= this.totalSelectedQuestions) {\n        this.showWinner();\n      }\n    },\n    showWinner() {\n      if (this.scores[0] > this.scores[1]) {\n        this.winnerMessage = 'Player 1 is the winner!';\n      } else if (this.scores[1] > this.scores[0]) {\n        this.winnerMessage = 'Player 2 is the winner!';\n      } else {\n        this.winnerMessage = 'It\\'s a tie!';\n      }\n      this.showWinnerModal = true;  // Show the winner modal immediately\n    },\n    resetGame() {\n      this.scores = [0, 0];\n      this.openedQuestions = [];\n      this.questionsAnswered = 0;\n      this.gameStarted = false;\n      this.showWinnerModal = false;\n      this.selectedCategories = []; // Clear selected categories\n      this.displayedQuestions = {};  // Clear questions from the board\n      this.errorMessage = \"\";\n    }\n  },\n  mounted() {\n    this.loadQuestions();\n    // Add a keydown listener when the component is mounted\n    window.addEventListener(\"keydown\", this.handleEscapeKey);\n  },\n  beforeUnmount() {\n    // Remove the keydown listener when the component is destroyed\n    window.removeEventListener(\"keydown\", this.handleEscapeKey);\n  }\n};\n</script>\n\n<style scoped>\n.player-scores {\n  margin-top: 5px !important; /* Adjust as needed */\n  text-align: Center;\n}\n\n.score-table {\n  margin: auto; /* Centering the table */\n  border-collapse: collapse;\n}\n\n.score-table th, .score-table td {\n  padding: 10px;\n  border: 1px solid #000;\n  text-align: center;\n}\n\ntable {\n  margin: 0 auto;\n  border-collapse: collapse;\n  width: 300px;\n}\n\nth, td {\n  border: 2px solid black;\n  padding: 10px;\n  font-size: 20px;\n}\n\n.winner-modal {\n  margin-top: -50px;\n}\n\n.winner-message {\n  font-size: 20px;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.start-game-btn {\n  background-color: green !important;\n  color: white !important;\n}\n\n.active-player {\n  background-color: green !important;\n  color: white;\n  padding: 10px;\n}\n\n.inactive-player {\n  background-color: red !important;\n  color: white;\n  padding: 10px;\n}\n\n.blinking-text {\n  animation: blinker 4s linear infinite;\n  background-color: yellow; /* Background color set to yellow */\n  padding: 5px; /* Optional: Add some padding for better visibility */\n  width: 650px;\n}\n\n@keyframes blinker {\n  50% {\n    opacity: 0;\n  }\n}\n</style>","<template>\n  <div class=\"game-board\">\n    <table>\n      <thead>\n        <tr>\n          <!-- Loop over columns to display the correct category header -->\n          <th v-for=\"(column, colIndex) in distributedColumns\" :key=\"colIndex\">\n            {{ column.category }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <!-- Loop through rows to display 5 rows of questions -->\n        <tr v-for=\"rowIndex in 5\" :key=\"rowIndex\">\n          <td v-for=\"(column, colIndex) in distributedColumns\" :key=\"colIndex\">\n            <v-btn\n              :class=\"{ 'answered': isOpened(column.category, getQuestionIndex(column, rowIndex)) }\"\n              :style=\"isOpened(column.category, getQuestionIndex(column, rowIndex)) \n                      ? { backgroundColor: 'grey', color: 'white' } \n                      : { backgroundColor: 'lightblue', color: 'purple' }\"\n              v-if=\"getQuestionForCell(column, rowIndex)\"\n              @click=\"$emit('ask-question', { category: column.category, index: getQuestionIndex(column, rowIndex) })\"\n              style=\"width: 120px; height: 30px; margin: -5px;\" \n            >\n              {{ getQuestionForCell(column, rowIndex).points }} POINTS\n            </v-btn>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    categories: Array, // List of selected categories\n    displayedQuestions: Object, // Questions by category\n    openedQuestions: Array, // List of opened questions\n  },\n  computed: {\n    distributedColumns() {\n      // Create an array to store the distributed columns\n      const columns = [];\n\n      this.categories.forEach((category) => {\n        const categoryQuestions = this.displayedQuestions[category] || [];\n\n        // Loop over category questions in batches of 5 and assign to columns\n        for (let i = 0; i < Math.ceil(categoryQuestions.length / 5); i++) {\n          columns.push({\n            category: category,\n            startIndex: i * 5, // Start index for the batch of questions for this column\n          });\n        }\n      });\n\n      return columns;\n    }\n  },\n  methods: {\n    // Helper function to get the correct question for the current column and row\n    getQuestionForCell(column, rowIndex) {\n      const category = column.category;\n      const questionIndex = column.startIndex + (rowIndex - 1);\n      if (this.displayedQuestions[category] && this.displayedQuestions[category][questionIndex]) {\n        return this.displayedQuestions[category][questionIndex];\n      }\n      return null;\n    },\n\n    // Helper function to get the correct question index for openedQuestions\n    getQuestionIndex(column, rowIndex) {\n      return column.startIndex + (rowIndex - 1);\n    },\n\n    // Check if a question has been opened or answered\n    isOpened(category, index) {\n      return this.openedQuestions.some(q => q.category === category && q.index === index);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.game-board {\n  width: 100%;\n  max-width: 800px;\n  margin: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  text-align: center;\n  padding: 10px;\n}\n\nv-btn {\n  margin: 5px !important;\n}\n\n.greyed-out {\n  background-color: lightgrey !important;\n  pointer-events: none;\n}\n\n/* Add a total questions display */\n.total-questions {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.total-questions p {\n  font-size: 16px;\n  margin: 5px 0;\n}\n\n.answered {\n  background-color: grey !important;\n  color: white !important;\n  pointer-events: none;\n}\n</style>","import { render } from \"./GameBoard.vue?vue&type=template&id=1b13970e&scoped=true\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js\"\n\nimport \"./GameBoard.vue?vue&type=style&index=0&id=1b13970e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b13970e\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=2f42ac09&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2f42ac09&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2f42ac09\"]])\n\nexport default __exports__","// src/plugins/vuetify.js\nimport 'vuetify/styles';  // Vuetify styles\nimport { createVuetify } from 'vuetify';\nimport * as components from 'vuetify/components';\nimport * as directives from 'vuetify/directives';\n\nexport default createVuetify({\n  components,\n  directives,\n});","import { createApp } from 'vue';\nimport App from './App.vue';\nimport vuetify from './plugins/vuetify';  // Import the Vuetify plugin\nimport 'vuetify/styles';\n\ncreateApp(App)\n  .use(vuetify)  // Use Vuetify\n  .mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkjeopardy_game\"] = self[\"webpackChunkjeopardy_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9077); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["key","style","class","_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_main","_component_v_row","_component_v_col","cols","_cache","_createElementVNode","_","_component_v_container","md","_component_v_select","modelValue","$data","selectedCategories","$event","items","categories","label","multiple","disabled","gameStarted","_component_v_btn","onClick","$options","handleStartGame","color","_createTextVNode","resetGame","errorMessage","_createElementBlock","_hoisted_1","_toDisplayString","_createCommentVNode","_component_GameBoard","openedQuestions","displayedQuestions","onAskQuestion","handleQuestion","_hoisted_2","_hoisted_3","_normalizeClass","currentPlayer","scores","_component_v_dialog","showModal","persistent","_component_v_card","_component_v_card_title","currentQuestion","question","_component_v_card_text","points","showAnswer","_hoisted_4","answer","_component_v_card_actions","text","revealAnswer","submitAnswer","skipQuestion","showWinnerModal","_hoisted_5","winnerMessage","_hoisted_6","_hoisted_7","_Fragment","_renderList","distributedColumns","column","colIndex","category","rowIndex","getQuestionForCell","isOpened","getQuestionIndex","_normalizeStyle","_ctx","$emit","index","props","Array","Object","computed","columns","this","forEach","categoryQuestions","i","Math","ceil","length","push","startIndex","methods","questionIndex","some","q","__exports__","name","components","GameBoard","data","questions","totalSelectedQuestions","questionsAnswered","totalQuestions","loadQuestions","csvFile","Papa","header","download","complete","result","processQuestions","Set","row","Category","Question","Answer","Marks","add","parseInt","from","shuffle","array","randomIndex","currentIndex","floor","random","maxQuestionsPerCategory","numSelectedCategories","sortedCategories","sort","a","b","availableQuestionsA","availableQuestionsB","selectedQuestions","remainingQuestions","remainingSelectedCategories","questionsPerCategory","shuffledQuestions","numQuestionsInCategory","min","adjustedQuestionsCount","slice","selectedQuestion","isCorrect","closeModal","checkGameOver","switchPlayer","handleEscapeKey","event","showWinner","mounted","window","addEventListener","beforeUnmount","removeEventListener","render","createVuetify","directives","createApp","App","use","vuetify","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}